{"version":3,"sources":["components/profile/ProfileDescription.js","components/profile/ProfileStats.js","components/profile/Profile.js","js/randomRGBColor.js","components/statistic/Statistic.js","components/friends/FriendListItem.js","components/friends/FriendsList.js","components/transactions/TransactionHistory.js","base-style/fonts/fonts.js","App.js","index.js"],"names":["Avatar","styled","img","Name","p","Desc","ProfileDescription","name","tag","location","avatar","src","alt","className","width","defaultProps","List","ul","ListItem","li","Text","span","Title","Value","ProfileStats","followers","views","likes","ProfileContainer","div","Profile","userInfo","stats","randomColor","Math","floor","random","toString","Section","section","h2","props","color","Txt","LabelTxt","PercentTxt","Statistic","title","map","stat","key","id","getColor","label","percentage","Item","IsOnline","FriendListItem","isOnline","Container","FriendsList","friends","friend","Table","table","THead","thead","TBody","tbody","TransactionHistory","transactions","transaction","type","amount","currency","createGlobalStyle","App","statisticalData","friendsList","transactionHistory","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8a17a2f7.chunk.js","sourcesContent":["import React from 'react';\nimport propTypes from 'prop-types';\n\n// styles imports\nimport styled from 'styled-components';\n\nconst Avatar = styled.img`\n  vertical-align: middle;\n  border-radius: 50%;\n  margin-bottom: 10px;\n`;\n\nconst Name = styled.p`\n  font-family: 'Druk Wide Bold';\n  margin-bottom: 10px;\n`;\n\nconst Desc = styled.p`\n  font-family: 'Noteworthy';\n  margin-bottom: 10px;\n`;\n\nconst ProfileDescription = ({ name, tag, location, avatar }) => (\n  <div>\n    <Avatar src={avatar} alt={name} className=\"Avatar\" width=\"150\" />\n    <Name>{name}</Name>\n    <Desc>@{tag}</Desc>\n    <Desc>{location}</Desc>\n  </div>\n);\n\nProfileDescription.defaultProps = {\n  avatar:\n    'https://i.pinimg.com/originals/a0/40/66/a04066a2d1fcf25df39c599e093995c8.jpg',\n};\n\nProfileDescription.propTypes = {\n  name: propTypes.string.isRequired,\n  tag: propTypes.string.isRequired,\n  location: propTypes.string.isRequired,\n  avatar: propTypes.string,\n};\n\nexport default ProfileDescription;\n","import React from 'react';\nimport propTypes from 'prop-types';\n\n// styles imports\nimport styled from 'styled-components';\n\nconst List = styled.ul`\n  display: flex;\n  width: 100%;\n`;\n\nconst ListItem = styled.li`\n  font-family: 'Noteworthy';\n\n  width: 100px;\n  flex-grow: 1;\n  border: 1px solid rgba(0, 0, 0, 0.075);\n  padding: 10px;\n\n  &:last-child {\n    border-bottom-right-radius: 10px;\n  }\n\n  &:first-child {\n    border-bottom-left-radius: 10px;\n  }\n\n  background-color: rgb(119, 136, 153);\n`;\n\nconst Text = styled.span`\n  display: block;\n  text-align: center;\n`;\n\nconst Title = styled(Text)`\n  margin-bottom: 5px;\n`;\n\nconst Value = styled(Text)`\n  font-weight: bold;\n`;\n\nconst ProfileStats = ({ followers, views, likes }) => (\n  <List>\n    <ListItem>\n      <Title>Followers</Title>\n      <Value>{followers}</Value>\n    </ListItem>\n    <ListItem>\n      <Title>Views</Title>\n      <Value>{views}</Value>\n    </ListItem>\n    <ListItem>\n      <Title>Likes</Title>\n      <Value>{likes}</Value>\n    </ListItem>\n  </List>\n);\n\nProfileStats.defaultProps = {\n  followers: 0,\n  views: 0,\n  likes: 0,\n};\n\nProfileStats.propTypes = {\n  followers: propTypes.number,\n  views: propTypes.number,\n  likes: propTypes.number,\n};\n\nexport default ProfileStats;\n","import React from 'react';\nimport propTypes from 'prop-types';\nimport styled from 'styled-components';\n\nimport ProfileDescription from './ProfileDescription.js';\nimport ProfileStats from './ProfileStats.js';\n\n//------------------ Styles ----------------------\n\nconst ProfileContainer = styled.div`\n  max-width: 300px;\n  margin: 0 auto;\n  border-radius: 10px;\n  margin-top: 25px;\n  margin-bottom: 25px;\n  padding-top: 20px;\n\n  text-align: center;\n\n  box-shadow: 0 0.125rem 0.25rem rgba(0, 0, 0, 0.075);\n  background-color: white;\n`;\n\n//------------------ Component --------------------\n\nconst Profile = ({ userInfo, stats }) => (\n  <ProfileContainer className=\"Profile\">\n    <ProfileDescription\n      name={userInfo.name}\n      tag={userInfo.tag}\n      location={userInfo.location}\n      avatar={userInfo.avatar}\n    />\n    <ProfileStats\n      followers={stats.followers}\n      views={stats.views}\n      likes={stats.likes}\n    />\n  </ProfileContainer>\n);\n\n//-------------------- Props ----------------------\n\nProfile.propTypes = {\n  userInfo: propTypes.shape({\n    name: propTypes.string.isRequired,\n    tag: propTypes.string,\n    location: propTypes.string,\n    avatar: propTypes.string,\n  }).isRequired,\n  stats: propTypes.shape({\n    followers: propTypes.number,\n    views: propTypes.number,\n    likes: propTypes.number,\n  }),\n};\n\nexport default Profile;\n","const randomColor = () => {\n  const randomColor = Math.floor(Math.random() * 16777215).toString(16);\n  return '#' + randomColor;\n};\n\nexport default randomColor;\n","import React from 'react';\nimport propTypes from 'prop-types';\n\nimport styled from 'styled-components';\nimport getColor from '../../js/randomRGBColor.js';\n\n//------------------ Styles ----------------------\n\nconst Section = styled.section`\n  width: 300px;\n  border-radius: 10px;\n  margin: auto;\n  text-align: center;\n  background-color: white;\n\n  margin-bottom: 25px;\n`;\n\nconst Title = styled.h2`\n  padding: 20px;\n  font-family: 'Druk Wide Bold';\n`;\n\nconst List = styled.ul`\n  display: flex;\n`;\n\nconst ListItem = styled.li`\n  flex-grow: 1;\n  font-family: 'Noteworthy';\n  padding: 5px;\n  width: 20px;\n  background-color: ${props => props.color};\n\n  &:last-child {\n    border-bottom-right-radius: 10px;\n  }\n\n  &:first-child {\n    border-bottom-left-radius: 10px;\n  }\n`;\n\nconst Txt = styled.span`\n  display: block;\n  color: white;\n`;\n\nconst LabelTxt = styled(Txt)`\n  margin-bottom: 4px;\n`;\n\nconst PercentTxt = styled(Txt)`\n  font-size: 21px;\n`;\n\n//------------------ Component --------------------\n\nconst Statistic = ({ title, stats }) => (\n  <Section>\n    {title && <Title>Upload stats</Title>}\n\n    <List>\n      {stats.map(stat => (\n        <ListItem key={stat.id} color={getColor()}>\n          <LabelTxt>{stat.label}</LabelTxt>\n          <PercentTxt>{stat.percentage}%</PercentTxt>\n        </ListItem>\n      ))}\n    </List>\n  </Section>\n);\n\n//-------------------- Props -------------------------\n\nStatistic.defaultProps = {\n  stats: [],\n};\n\nStatistic.propTypes = {\n  title: propTypes.string,\n  stats: propTypes.array,\n};\n\nexport default Statistic;\n","import React from 'react';\nimport propTypes from 'prop-types';\n\nimport styled from 'styled-components';\n\n//----------------- Styles -------------------\n\nconst Item = styled.li`\n  display: flex;\n  align-items: center;\n  justify-content: space-evenly;\n\n  border-radius: 5px;\n  box-shadow: 2px 2px 6px;\n\n  margin-bottom: 10px;\n  padding: 20px;\n\n  background-color: white;\n`;\n\nconst IsOnline = styled.span`\n  width: 10px;\n  height: 10px;\n  border-radius: 50%;\n  background-color: ${props => props.color};\n`;\n\nconst Avatar = styled.img`\n  border-radius: 5px;\n`;\n\nconst Name = styled.p`\n  font-family: 'Noteworthy';\n`;\n\nconst FriendListItem = ({ name, avatar, isOnline }) => (\n  <Item>\n    <IsOnline color={isOnline ? 'green' : 'red'}></IsOnline>\n    <Avatar src={avatar} alt=\"\" width=\"48\" />\n    <Name>{name}</Name>\n  </Item>\n);\n\nFriendListItem.defaultProps = {\n  avatar:\n    'https://i.pinimg.com/originals/a0/40/66/a04066a2d1fcf25df39c599e093995c8.jpg',\n};\n\nFriendListItem.propTypes = {\n  name: propTypes.string.isRequired,\n  isOnline: propTypes.bool.isRequired,\n  avatar: propTypes.string,\n};\n\nexport default FriendListItem;\n","import React from 'react';\nimport propTypes from 'prop-types';\n\nimport styled from 'styled-components';\n\nimport FriendListItem from './FriendListItem';\n\n//------------------ Styles ----------------------\n\nconst Container = styled.div`\n  width: 250px;\n  margin: auto;\n  margin-bottom: 25px;\n`;\n\nconst List = styled.ul``;\n\n//------------------ Component --------------------\n\nconst FriendsList = ({ friends }) => (\n  <Container>\n    <List>\n      {friends.map(friend => (\n        <FriendListItem\n          key={friend.id}\n          avatar={friend.avatar}\n          isOnline={friend.isOnline}\n          name={friend.name}\n        />\n      ))}\n    </List>\n  </Container>\n);\n\n//-------------------- Props ----------------------\n\nFriendsList.propTypes = {\n  friends: propTypes.arrayOf(\n    propTypes.shape({\n      id: propTypes.number.isRequired,\n      name: propTypes.string.isRequired,\n      isOnline: propTypes.bool.isRequired,\n      avatar: propTypes.string,\n    }),\n  ).isRequired,\n};\n\nexport default FriendsList;\n","import React from 'react';\nimport propTypes from 'prop-types';\n\nimport styled from 'styled-components';\n\n//-------------------- Styles ---------------------\n\nconst Table = styled.table`\n  margin: 0 auto;\n  background-color: white;\n  width: 500px;\n`;\n\nconst THead = styled.thead`\n  background-color: seagreen;\n  font-size: 20px;\n\n  border-radius: 5px;\n\n  & tr th {\n    padding: 5px;\n    color: white;\n  }\n`;\n\nconst TBody = styled.tbody`\n  text-align: center;\n\n  & tr td {\n    padding: 10px;\n  }\n\n  & :not(td):nth-child(even) {\n    background-color: grey;\n  }\n\n  & tr :first-child {\n    text-transform: capitalize;\n  }\n`;\n\nconst TransactionHistory = ({ transactions }) => (\n  <Table>\n    <THead>\n      <tr>\n        <th>Type</th>\n        <th>Amount</th>\n        <th>Currency</th>\n      </tr>\n    </THead>\n\n    <TBody>\n      {transactions.map(transaction => (\n        <tr key={transaction.id}>\n          <td>{transaction.type}</td>\n          <td>{transaction.amount}</td>\n          <td>{transaction.currency}</td>\n        </tr>\n      ))}\n    </TBody>\n  </Table>\n);\n\nTransactionHistory.propTypes = {\n  transactions: propTypes.arrayOf(\n    propTypes.exact({\n      id: propTypes.string,\n      type: propTypes.string.isRequired,\n      amount: propTypes.string.isRequired,\n      currency: propTypes.string.isRequired,\n    }),\n  ).isRequired,\n};\n\nexport default TransactionHistory;\n","import { createGlobalStyle } from 'styled-components';\n\nexport default createGlobalStyle`\n    @font-face {\n        font-family: \"Druk Wide Bold\";\n        src: url(\"//db.onlinewebfonts.com/t/2206d6cc490084998d531e8c1b2cbb4a.eot\");\n        src: url(\"//db.onlinewebfonts.com/t/2206d6cc490084998d531e8c1b2cbb4a.eot?#iefix\") format(\"embedded-opentype\"), url(\"//db.onlinewebfonts.com/t/2206d6cc490084998d531e8c1b2cbb4a.woff2\") format(\"woff2\"), url(\"//db.onlinewebfonts.com/t/2206d6cc490084998d531e8c1b2cbb4a.woff\") format(\"woff\"), url(\"//db.onlinewebfonts.com/t/2206d6cc490084998d531e8c1b2cbb4a.ttf\") format(\"truetype\"), url(\"//db.onlinewebfonts.com/t/2206d6cc490084998d531e8c1b2cbb4a.svg#Druk Wide Bold\") format(\"svg\"); \n    }\n    @font-face {font-family: \"Noteworthy\"; src: url(\"//db.onlinewebfonts.com/t/016f50054d487d421dc18257a191a3ad.eot\"); src: url(\"//db.onlinewebfonts.com/t/016f50054d487d421dc18257a191a3ad.eot?#iefix\") format(\"embedded-opentype\"), url(\"//db.onlinewebfonts.com/t/016f50054d487d421dc18257a191a3ad.woff2\") format(\"woff2\"), url(\"//db.onlinewebfonts.com/t/016f50054d487d421dc18257a191a3ad.woff\") format(\"woff\"), url(\"//db.onlinewebfonts.com/t/016f50054d487d421dc18257a191a3ad.ttf\") format(\"truetype\"), url(\"//db.onlinewebfonts.com/t/016f50054d487d421dc18257a191a3ad.svg#Noteworthy\") format(\"svg\"); }\n`;\n","import React from 'react';\n\nimport Profile from './components/profile/Profile';\nimport Statistic from './components/statistic/Statistic';\nimport FriendsList from './components/friends/FriendsList';\nimport TransactionHistory from './components/transactions/TransactionHistory';\n\nimport GlobalFont from './base-style/fonts/fonts';\n\nimport userInfo from './json/user.json';\nimport statisticalData from './json/statistics.json';\nimport friendsList from './json/friends.json';\nimport transactionHistory from './json/transactions.json';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <GlobalFont />\n      <Profile userInfo={userInfo} stats={userInfo.stats} />\n      <Statistic title=\"Upload stats\" stats={statisticalData} />\n      <FriendsList friends={friendsList} />\n      <TransactionHistory transactions={transactionHistory} />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nimport './base-style/base.css';\nimport './base-style/normalize.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}